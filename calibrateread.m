%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/filipe/sensor-luva/udp/dataset/calibrate.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2022/02/08 01:02:46

%% Initialize variables.
filename = '/home/filipe/sensor-luva/udp/dataset/exp5.csv';
delimiter = ',';

%% Read columns of data as text:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'TextType', 'string',  'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric text to numbers.
% Replace non-numeric text with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = mat2cell(dataArray{col}, ones(length(dataArray{col}), 1));
end
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

for col=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]
    % Converts text in the input cell array to numbers. Replaced non-numeric
    % text with NaN.
    rawData = dataArray{col};
    for row=1:size(rawData, 1)
        % Create a regular expression to detect and remove non-numeric prefixes and
        % suffixes.
        regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
        try
            result = regexp(rawData(row), regexstr, 'names');
            numbers = result.numbers;
            
            % Detected commas in non-thousand locations.
            invalidThousandsSeparator = false;
            if numbers.contains(',')
                thousandsRegExp = '^\d+?(\,\d{3})*\.{0,1}\d*$';
                if isempty(regexp(numbers, thousandsRegExp, 'once'))
                    numbers = NaN;
                    invalidThousandsSeparator = true;
                end
            end
            % Convert numeric text to numbers.
            if ~invalidThousandsSeparator
                numbers = textscan(char(strrep(numbers, ',', '')), '%f');
                numericData(row, col) = numbers{1};
                raw{row, col} = numbers{1};
            end
        catch
            raw{row, col} = rawData{row};
        end
    end
end


%% Exclude rows with non-numeric cells
I = ~all(cellfun(@(x) (isnumeric(x) || islogical(x)) && ~isnan(x),raw),2); % Find rows with non-numeric cells
raw(I,:) = [];

%% Create output variable
%% Create output variable
calibrate = table(dataArray{1:end-1}, 'VariableNames', {'VarName1','VarName2','VarName3','VarName4','VarName5','VarName6','VarName7','VarName8','VarName9','VarName10','VarName11','VarName12','VarName13','VarName14','VarName15','VarName16','VarName17','VarName18','VarName19','VarName20','VarName21','VarName22','VarName23','VarName24','VarName25'});

test = table;
test.metattheta0 = cell2mat(raw(:, 1));
test.metaphi0 = cell2mat(raw(:, 2));
test.proxtheta0 = cell2mat(raw(:, 3));
test.proxphi0 = cell2mat(raw(:, 4));
test.p0 = cell2mat(raw(:, 5));
test.metatheta1 = cell2mat(raw(:, 6));
test.metaphi1 = cell2mat(raw(:, 7));
test.proxtheta1 = cell2mat(raw(:, 8));
test.proxphi1 = cell2mat(raw(:, 9));
test.p1 = cell2mat(raw(:, 10));
test.metatheta2 = cell2mat(raw(:, 11));
test.metaphi2 = cell2mat(raw(:, 12));
test.proxtheta2 = cell2mat(raw(:, 13));
test.proxphi2 = cell2mat(raw(:, 14));
test.p2 = cell2mat(raw(:, 15));
test.metatheta3 = cell2mat(raw(:, 16));
test.metaphi3 = cell2mat(raw(:, 17));
test.proxtheta3 = cell2mat(raw(:, 18));
test.proxphi3 = cell2mat(raw(:, 19));
test.p3 = cell2mat(raw(:, 20));
test.metatheta4 = cell2mat(raw(:, 21));
test.metaphi4 = cell2mat(raw(:, 22));
test.reftheta = cell2mat(raw(:, 23));
test.refphi = cell2mat(raw(:, 24));
test.p4 = cell2mat(raw(:, 25));

%% Clear temporary variables
clearvars filename delimiter formatSpec fileID dataArray ans raw col numericData rawData row regexstr result numbers invalidThousandsSeparator thousandsRegExp I J K;