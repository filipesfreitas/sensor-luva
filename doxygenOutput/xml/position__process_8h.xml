<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="position__process_8h" kind="file" language="C++">
    <compoundname>position_process.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="yes">esp_timer.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="misc_8h" local="no">misc.h</includes>
    <includes refid="i2c__handler_8h" local="no">i2c_handler.h</includes>
    <includes local="yes">esp_log.h</includes>
    <includedby refid="position__process_8c" local="no">components/orientation_estimate/position_process.c</includedby>
    <includedby refid="udp__server_8c" local="no">main/udp_server.c</includedby>
    <incdepgraph>
      <node id="7">
        <label>driver/gpio.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="9">
        <label>esp_adc_cal.h</label>
      </node>
      <node id="11">
        <label>i2c_handler.h</label>
        <link refid="i2c__handler_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>esp_timer.h</label>
      </node>
      <node id="8">
        <label>driver/adc.h</label>
      </node>
      <node id="6">
        <label>misc.h</label>
        <link refid="misc_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="13">
        <label>esp_log.h</label>
      </node>
      <node id="1">
        <label>components/orientation_estimate/include/position_process.h</label>
        <link refid="position__process_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>math.h</label>
      </node>
      <node id="12">
        <label>driver/i2c.h</label>
      </node>
      <node id="10">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>main/udp_server.c</label>
        <link refid="udp__server_8c"/>
      </node>
      <node id="1">
        <label>components/orientation_estimate/include/position_process.h</label>
        <link refid="position__process_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>components/orientation_estimate/position_process.c</label>
        <link refid="position__process_8c_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structraw__data" prot="public">raw_data</innerclass>
    <innerclass refid="structorientation" prot="public">orientation</innerclass>
    <innerclass refid="structfinger" prot="public">finger</innerclass>
    <innerclass refid="structGlove" prot="public">Glove</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="position__process_8h_1aa144b5fe119e10d0393dc5230e14be29" prot="public" static="no">
        <name>gyro_factor</name>
        <initializer>16.4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gyroscpe convertion </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="16" column="9" bodyfile="components/orientation_estimate/include/position_process.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="position__process_8h_1afb9d224c8372369eb72bffd188780a9b" prot="public" static="no">
        <name>acc_factor</name>
        <initializer>2048</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="17" column="9" bodyfile="components/orientation_estimate/include/position_process.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="position__process_8h_1a0697890f049fc0cb9cd441e833fcc693" prot="public" static="no">
        <name>degre_conv</name>
        <initializer>180/M_PI</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="18" column="9" bodyfile="components/orientation_estimate/include/position_process.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="position__process_8h_1a7b807f2b3e079148afb047e7dc447483" prot="public" static="no">
        <name>radconv</name>
        <initializer>M_PI/180</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="19" column="9" bodyfile="components/orientation_estimate/include/position_process.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="position__process_8h_1a16035715cb41fe974850c6ea798e18dd" prot="public" static="no">
        <name>time_constant</name>
        <initializer>.1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="20" column="9" bodyfile="components/orientation_estimate/include/position_process.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="position__process_8h_1a3fd19f50aa536679812917ad5a4c7870" prot="public" static="no">
        <name>period</name>
        <initializer>70E-3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="21" column="9" bodyfile="components/orientation_estimate/include/position_process.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="position__process_8h_1a5c71a5e59a53413cd6c270266d63b031" prot="public" static="no">
        <name>R</name>
        <initializer>4700 	/* Resistance of voltage divider on ohms */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="22" column="9" bodyfile="components/orientation_estimate/include/position_process.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="position__process_8h_1a6eb1d4fd9cb488b6dfe2c6baef719238" prot="public" static="no">
        <name>Vinput</name>
        <initializer>3300 /* Input voltage in mV */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="23" column="9" bodyfile="components/orientation_estimate/include/position_process.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="position__process_8h_1abefd02dbf31793e3bfa4f14af9bcfbe9" prot="public" static="no">
        <name>channels</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="24" column="9" bodyfile="components/orientation_estimate/include/position_process.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="position__process_8h_1a1cc6be0a7427e2d19fc9fd0cd186b117" prot="public" static="no">
        <name>gyrosens</name>
        <initializer>radconv/16.4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="25" column="9" bodyfile="components/orientation_estimate/include/position_process.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="position__process_8h_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;TAG_ESP&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="12" column="19" bodyfile="components/orientation_estimate/include/position_process.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="position__process_8h_1a5d19a398b651c5afcbe87d8e2f7b2757" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float fix_orientation</definition>
        <argsstring>(raw_data raw, float angle)</argsstring>
        <name>fix_orientation</name>
        <param>
          <type><ref refid="structraw__data" kindref="compound">raw_data</ref></type>
          <declname>raw</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>fix orientation angle consedering the limitations of using inverse trigonometrics fuction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">raw</parametername>
</parameternamelist>
<parameterdescription>
<para>The raw data of the IMU, it is used to determine the quadrant in the unitary circle that the IMU was. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">angle</parametername>
</parameternamelist>
<parameterdescription>
<para>The estimative of the angle produced by the system.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the correction of the angle rotated 90 degres. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="65" column="7" bodyfile="components/orientation_estimate/position_process.c" bodystart="33" bodyend="39" declfile="components/orientation_estimate/include/position_process.h" declline="65" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="position__process_8h_1acda15d446a599356007066413e27f051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void orientation_estimation</definition>
        <argsstring>(raw_data metacarpo, raw_data proximal, Glove *glove, int i)</argsstring>
        <name>orientation_estimation</name>
        <param>
          <type><ref refid="structraw__data" kindref="compound">raw_data</ref></type>
          <declname>metacarpo</declname>
        </param>
        <param>
          <type><ref refid="structraw__data" kindref="compound">raw_data</ref></type>
          <declname>proximal</declname>
        </param>
        <param>
          <type><ref refid="structGlove" kindref="compound">Glove</ref> *</type>
          <declname>glove</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Update the orientation of the position of a given finger. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">metacarpo</parametername>
</parameternamelist>
<parameterdescription>
<para>matacarpal falange raw data, i.e acceleration and gyroscope data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">proximal</parametername>
</parameternamelist>
<parameterdescription>
<para>proximal falange raw data, i.e acceleration and gyroscope data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>glove</parametername>
</parameternamelist>
<parameterdescription>
<para>Structure representing the hand posture captured by the glove device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>finger indication for update orientation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="74" column="6" bodyfile="components/orientation_estimate/position_process.c" bodystart="5" bodyend="32" declfile="components/orientation_estimate/include/position_process.h" declline="74" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="position__process_8h_1ac78209ab9e3232f2a0860a79ebfc04fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reference_frame_orientation</definition>
        <argsstring>(raw_data reference, Glove *glove)</argsstring>
        <name>reference_frame_orientation</name>
        <param>
          <type><ref refid="structraw__data" kindref="compound">raw_data</ref></type>
          <declname>reference</declname>
        </param>
        <param>
          <type><ref refid="structGlove" kindref="compound">Glove</ref> *</type>
          <declname>glove</declname>
        </param>
        <briefdescription>
<para>Update of the orientation of the reference frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw data contaning acceleration and gyroscope input. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>glove</parametername>
</parameternamelist>
<parameterdescription>
<para>Structure representing the hand posture captured by the glove device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="81" column="6" bodyfile="components/orientation_estimate/position_process.c" bodystart="63" bodyend="77" declfile="components/orientation_estimate/include/position_process.h" declline="81" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="position__process_8h_1aca8abd474b22fa63e8808076931ee809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calibration</definition>
        <argsstring>(Glove *glove)</argsstring>
        <name>calibration</name>
        <param>
          <type><ref refid="structGlove" kindref="compound">Glove</ref> *</type>
          <declname>glove</declname>
        </param>
        <briefdescription>
<para>Calibration funtion, take mesure of aceleration of every device connected and estimate a angle for future reference. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glove</parametername>
</parameternamelist>
<parameterdescription>
<para>Structure representing the hand posture captured by the glove device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="87" column="6" bodyfile="components/orientation_estimate/position_process.c" bodystart="79" bodyend="129" declfile="components/orientation_estimate/include/position_process.h" declline="87" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="position__process_8h_1a34824cb185632ac88f193405cde5251e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initialization</definition>
        <argsstring>(Glove *glove)</argsstring>
        <name>initialization</name>
        <param>
          <type><ref refid="structGlove" kindref="compound">Glove</ref> *</type>
          <declname>glove</declname>
        </param>
        <briefdescription>
<para>Call i2c_imu_setup for initialize every device connected, i.e IMU, for turning them up and do configure the parameters of internal filters bandwidth, powerup type and etc. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glove</parametername>
</parameternamelist>
<parameterdescription>
<para>Structure representing the hand posture captured by the glove device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="93" column="6" bodyfile="components/orientation_estimate/position_process.c" bodystart="131" bodyend="159" declfile="components/orientation_estimate/include/position_process.h" declline="93" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="position__process_8h_1aecd91e341a0c9ea3591b798f9c2a414f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void buffer_arrange</definition>
        <argsstring>(Glove *glove, char message[])</argsstring>
        <name>buffer_arrange</name>
        <param>
          <type><ref refid="structGlove" kindref="compound">Glove</ref> *</type>
          <declname>glove</declname>
        </param>
        <param>
          <type>char</type>
          <declname>message</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Buffer char[] type for configure the shape of the packge to be displayed or send to device connected throug WiFi. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glove</parametername>
</parameternamelist>
<parameterdescription>
<para>Structure representing the hand posture captured by the glove device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Char* type parameter buffer for storing hand position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="100" column="6" bodyfile="components/orientation_estimate/position_process.c" bodystart="197" bodyend="225" declfile="components/orientation_estimate/include/position_process.h" declline="100" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="position__process_8h_1a57f21ef5abe15c1d80faca9cf49314e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void raw_data_zero</definition>
        <argsstring>(raw_data *member)</argsstring>
        <name>raw_data_zero</name>
        <param>
          <type><ref refid="structraw__data" kindref="compound">raw_data</ref> *</type>
          <declname>member</declname>
        </param>
        <briefdescription>
<para>Zero input for every member of member. <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>member</parametername>
</parameternamelist>
<parameterdescription>
<para>Structured to be initialized, values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="106" column="6" bodyfile="components/orientation_estimate/position_process.c" bodystart="227" bodyend="234" declfile="components/orientation_estimate/include/position_process.h" declline="106" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="position__process_8h_1aeae13e0108d5a46b0840b388a93ec24b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void buffer_raw_data</definition>
        <argsstring>(raw_data *test1, raw_data *test2)</argsstring>
        <name>buffer_raw_data</name>
        <param>
          <type><ref refid="structraw__data" kindref="compound">raw_data</ref> *</type>
          <declname>test1</declname>
        </param>
        <param>
          <type><ref refid="structraw__data" kindref="compound">raw_data</ref> *</type>
          <declname>test2</declname>
        </param>
        <briefdescription>
<para>Debugger fucntion that put on stdout, on monitor when the device is connected to a computer, for visualization of raw data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>test1</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw data of first device attached. <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>test2</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw data of first device attached. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="113" column="6" bodyfile="components/orientation_estimate/position_process.c" bodystart="40" bodyend="61" declfile="components/orientation_estimate/include/position_process.h" declline="113" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="position__process_8h_1a1e2d2fe8cafd25f4e0ecb0c75b2b7d3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup_sensors</definition>
        <argsstring>()</argsstring>
        <name>setup_sensors</name>
        <briefdescription>
<para>Take glove structure and realize fram trasnformation for the reference frame! </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glove</parametername>
</parameternamelist>
<parameterdescription>
<para>The glove structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>finger index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
setup sensors </para>
        </detaileddescription>
        <inbodydescription>
<para>first set reference sensor <linebreak/>
</para>
        </inbodydescription>
        <location file="components/orientation_estimate/include/position_process.h" line="123" column="6" bodyfile="components/orientation_estimate/position_process.c" bodystart="160" bodyend="195" declfile="components/orientation_estimate/include/position_process.h" declline="123" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>POSITION_PROCESS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POSITION_PROCESS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_timer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;misc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;i2c_handler.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TAG_ESP&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>gyro_factor<sp/>16.4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>acc_factor<sp/>2048</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>degre_conv<sp/>180/M_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>radconv<sp/>M_PI/180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>time_constant<sp/>.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>period<sp/>70E-3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R<sp/>4700<sp/><sp/></highlight><highlight class="comment">/*<sp/>Resistance<sp/>of<sp/>voltage<sp/>divider<sp/>on<sp/>ohms<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Vinput<sp/>3300<sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>voltage<sp/>in<sp/>mV<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>channels<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>gyrosens<sp/>radconv/16.4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structraw__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>accelx;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>accely;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>accelz;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gyrox;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gyroy;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gyroz;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>master_num;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structfinger" kindref="compound">finger</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}<sp/><ref refid="structraw__data" kindref="compound">raw_data</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structorientation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>phi;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>theta;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}<ref refid="structorientation" kindref="compound">orientation</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="structfinger" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="structorientation" kindref="compound">orientation</ref><sp/>proximal;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="structorientation" kindref="compound">orientation</ref><sp/>distal;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="structorientation" kindref="compound">orientation</ref><sp/>metacarpo;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pressure;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}<ref refid="structfinger" kindref="compound">finger</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structGlove" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="structfinger" kindref="compound">finger</ref><sp/>fingers[5];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="structorientation" kindref="compound">orientation</ref><sp/>frame_reference;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<ref refid="structGlove" kindref="compound">Glove</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fix_orientation(<ref refid="structraw__data" kindref="compound">raw_data</ref><sp/>raw,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>orientation_estimation(<ref refid="structraw__data" kindref="compound">raw_data</ref><sp/>metacarpo,<ref refid="structraw__data" kindref="compound">raw_data</ref><sp/>proximal,<ref refid="structGlove" kindref="compound">Glove</ref>*<sp/>glove,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reference_frame_orientation(<ref refid="structraw__data" kindref="compound">raw_data</ref><sp/>reference,<ref refid="structGlove" kindref="compound">Glove</ref>*<sp/>glove);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calibration(<ref refid="structGlove" kindref="compound">Glove</ref>*<sp/>glove);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialization(<ref refid="structGlove" kindref="compound">Glove</ref>*<sp/>glove);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>buffer_arrange(<ref refid="structGlove" kindref="compound">Glove</ref>*<sp/>glove,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>message[]);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>raw_data_zero(<ref refid="structraw__data" kindref="compound">raw_data</ref>*<sp/>member);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>buffer_raw_data(<ref refid="structraw__data" kindref="compound">raw_data</ref>*<sp/>test1,<ref refid="structraw__data" kindref="compound">raw_data</ref>*<sp/>test2);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup_sensors();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="components/orientation_estimate/include/position_process.h"/>
  </compounddef>
</doxygen>
